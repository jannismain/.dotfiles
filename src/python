## Python
alias p="python3"
### Virtual Environments
alias venv="source env/bin/activate 2> /dev/null || source .venv/bin/activate"
### Pip

# prevent globbing issue when installing with extras
# i.e. pip install something[extra] --> zsh: no matches found: something[extra]
alias pip='noglob pip'
alias pipi="pip install"
alias pipir="pip install -r requirements.txt"
alias pipirin="pip install -r requirements.in"
alias pipl="pip list"
alias pipv="pip --version"
function pipu() {
  if [ -n "$1" ]
  then
    pip install --upgrade "$1"
  else
    pip install --upgrade pip
  fi
}
# Create requirements file
alias pipreq="pip freeze > requirements.txt"
# Update all installed packages
function pipupall {
  # non-GNU xargs does not support nor need `--no-run-if-empty`
  local xargs="xargs --no-run-if-empty"
  xargs --version 2>/dev/null | grep -q GNU || xargs="xargs"
  pip list --outdated --format freeze | cut -d= -f1 | ${=xargs} pip install --upgrade
}

alias pipun="pip uninstall"
# Uninstalled all installed packages
function pipunall {
  # non-GNU xargs does not support nor need `--no-run-if-empty`
  local xargs="xargs --no-run-if-empty"
  xargs --version 2>/dev/null | grep -q GNU || xargs="xargs"
  pip list --format freeze | cut -d= -f1 | ${=xargs} pip uninstall -y
}


# pytest
if command -v pytest &> /dev/null
then
    eval "$(register-python-argcomplete pytest)"
fi

# hatch
alias h="hatch"
alias hr="hatch run"
alias hv="hatch version"

# uv
alias uvr="uv run"

function pyclean {
    find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete
}

# bump-my-version
alias bump="bump-my-version"
