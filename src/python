## Python
alias p="python"
alias p3="python3"
### Virtual Environments
alias venv="source env/bin/activate"
### Pip

# prevent globbing issue when installing with extras
# i.e. pip install something[extra] --> zsh: no matches found: something[extra]
alias pip='noglob pip'
alias pipi="pip install"
alias pipir="pip install -r requirements.txt"
alias pipl="pip list"
alias pipv="pip --version"
function pipu() {
  if [ -n "$1" ]
  then
    python -m pip install --upgrade "$1"
  else
    python -m pip install --upgrade pip
  fi
}
# Create requirements file
alias pipreq="pip freeze > requirements.txt"
# Update all installed packages
function pipupall {
  # non-GNU xargs does not support nor need `--no-run-if-empty`
  local xargs="xargs --no-run-if-empty"
  xargs --version 2>/dev/null | grep -q GNU || xargs="xargs"
  pip list --outdated --format freeze | cut -d= -f1 | ${=xargs} pip install --upgrade
}

alias pipun="pip uninstall"
# Uninstalled all installed packages
function pipunall {
  # non-GNU xargs does not support nor need `--no-run-if-empty`
  local xargs="xargs --no-run-if-empty"
  xargs --version 2>/dev/null | grep -q GNU || xargs="xargs"
  pip list --format freeze | cut -d= -f1 | ${=xargs} pip uninstall -y
}

# configure pipx
if command -v pipx &> /dev/null
then
    export PATH="$PATH:~/.local/bin"
    eval "$(register-python-argcomplete pipx)"  # requires bashcompinit
    export PIPX_DEFAULT_PYTHON=python  # use system python by default
fi

# pytest
if command -v pytest &> /dev/null
then
    eval "$(register-python-argcomplete pytest)"
fi
